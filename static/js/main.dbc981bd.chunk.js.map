{"version":3,"sources":["utilities.js","App.js","serviceWorker.js","index.js"],"names":["fingerJoints","thumb","indexFinger","middleFinger","ringFinger","pinky","style","0","color","size","1","2","3","4","5","6","7","8","9","10","11","12","13","14","15","16","17","18","19","20","drawHand","predictions","ctx","length","forEach","prediction","landmarks","j","Object","keys","finger","k","firstJointIndex","secondJointIndex","beginPath","moveTo","lineTo","strokeStyle","lineWidth","stroke","wrist","Image","setAttribute","ring","RingfingerX","RingfingerY","RingfingerUpperJointX","RingfingerUpperJointY","finger_angle_in_radian","Math","atan","PI","save","translate","rotate","drawImage","width","height","restore","wristX","wristY","middleFingerX","middleFingerY","angle_in_radian","console","log","i","x","y","arc","fillStyle","App","webcamRef","useRef","canvasRef","runHandpose","a","handpose","net","setInterval","detect","current","video","readyState","videoWidth","videoHeight","estimateHands","hand","getContext","className","ref","position","marginLeft","marginRight","left","right","textAlign","zindex","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.dbc981bd.chunk.js","sourcesContent":["// Points for fingers\nconst fingerJoints = {\n  thumb: [0, 1, 2, 3, 4],\n  indexFinger: [0, 5, 6, 7, 8],\n  middleFinger: [0, 9, 10, 11, 12],\n  ringFinger: [0, 13, 14, 15, 16],\n  pinky: [0, 17, 18, 19, 20],\n};\n\n// Infinity Gauntlet Style\nconst style = {\n  0: { color: \"black\", size: 15 },\n  1: { color: \"gold\", size: 6 },\n  2: { color: \"green\", size: 10 },\n  3: { color: \"gold\", size: 6 },\n  4: { color: \"gold\", size: 6 },\n  5: { color: \"purple\", size: 10 },\n  6: { color: \"gold\", size: 6 },\n  7: { color: \"gold\", size: 6 },\n  8: { color: \"gold\", size: 6 },\n  9: { color: \"blue\", size: 10 },\n  10: { color: \"gold\", size: 6 },\n  11: { color: \"gold\", size: 6 },\n  12: { color: \"gold\", size: 6 },\n  13: { color: \"red\", size: 10 },\n  14: { color: \"gold\", size: 6 },\n  15: { color: \"gold\", size: 6 },\n  16: { color: \"gold\", size: 6 },\n  17: { color: \"orange\", size: 10 },\n  18: { color: \"gold\", size: 6 },\n  19: { color: \"gold\", size: 6 },\n  20: { color: \"gold\", size: 6 },\n};\n\n// Drawing function\nexport const drawHand = (predictions, ctx) => \n{\n  // Check if we have predictions\n  if (predictions.length > 0) \n  {\n    // Loop through each prediction\n    predictions.forEach((prediction) => {\n      // Grab landmarks\n      const landmarks = prediction.landmarks;\n\n      // Loop through fingers\n      for (let j = 0; j < Object.keys(fingerJoints).length; j++) {\n        let finger = Object.keys(fingerJoints)[j];\n        //  Loop through pairs of joints\n        for (let k = 0; k < fingerJoints[finger].length - 1; k++) {\n          // Get pairs of joints\n          const firstJointIndex = fingerJoints[finger][k];\n          const secondJointIndex = fingerJoints[finger][k + 1];\n\n          // Draw path\n          ctx.beginPath();\n          ctx.moveTo(\n            landmarks[firstJointIndex][0],\n            landmarks[firstJointIndex][1]\n          );\n          ctx.lineTo(\n            landmarks[secondJointIndex][0],\n            landmarks[secondJointIndex][1]\n          );\n          ctx.strokeStyle = \"plum\";\n          ctx.lineWidth = 4;\n          ctx.stroke();\n        }\n      }\n      var wrist= new Image();\n      wrist.setAttribute('src',\"https://ashish7777777.github.io/bracelet/bracelet.png \");\n      var ring= new Image();\n      ring.setAttribute('src','https://ashish7777777.github.io/Ring/ring.png');\n      //wrist.setAttribute('src','https://restcountries.eu/data/afg.svg');\n      var RingfingerX=landmarks[13][0];\n      var RingfingerY=landmarks[13][1];\n      var RingfingerUpperJointX=landmarks[14][0];\n      var RingfingerUpperJointY=landmarks[14][1];\n      var finger_angle_in_radian=Math.atan((RingfingerUpperJointY - RingfingerY )/(RingfingerUpperJointX- RingfingerX ));\n      if(RingfingerUpperJointX-RingfingerX>0)\n      {\n        finger_angle_in_radian=-finger_angle_in_radian;\n      }\n      else\n      {\n        finger_angle_in_radian=Math.PI+(-finger_angle_in_radian);\n      }\n\n      ctx.save();\n      ctx.translate(landmarks[14][0],landmarks[14][1]);\n      ctx.rotate((Math.PI/2 - finger_angle_in_radian));\n      ctx.drawImage(ring,-ring.width/2,-ring.height/2+50);\n      ctx.restore();\n      \n\n\n      //calculating angle......\n      var wristX=landmarks[0][0];\n      var wristY=landmarks[0][1];\n      var middleFingerX=landmarks[9][0];\n      var middleFingerY=landmarks[9][1];\n      var angle_in_radian=Math.atan((middleFingerY - wristY )/(middleFingerX- wristX ));\n      /*if( (middleFingerX - wristX)<0 )\n      {\n        angle_in_radian=-angle_in_radian;\n      }*/\n      var angle_in_degree=(angle_in_radian*180/Math.PI);\n      if(middleFingerX - wristX>0)\n      {\n        console.log(-angle_in_radian+\"positive\");\n        angle_in_radian=-angle_in_radian;\n      }\n         \n      else\n      {\n        console.log(Math.PI+angle_in_radian+\"negative\");\n        angle_in_radian=1*Math.PI+(-angle_in_radian);\n      }\n\n      ctx.save();\n      ctx.translate(landmarks[0][0],landmarks[0][1]);\n     // ctx.rotate(-((Math.PI/2)-angle_in_radian));\n      ctx.rotate((Math.PI/2 - angle_in_radian));\n      ctx.drawImage(wrist,-wrist.width/2,-wrist.height/2+50);\n      ctx.restore();\n      // Loop through landmarks and draw em\n      for (let i = 1; i < landmarks.length; i++) {\n        // Get x point\n        const x = landmarks[i][0];\n        // Get y point\n        const y = landmarks[i][1];\n        // Start drawing\n        console.log(landmarks[8][0]+\"<---X---Y--->\"+landmarks[8][1]);\n        ctx.beginPath();\n        ctx.arc(x, y, style[i][\"size\"], 0, 3 * Math.PI);\n        // Set line color\n        ctx.fillStyle = style[i][\"color\"];\n       // ctx.fill();\n      }\n       /* let model = document.createElement('x-model');\n        model.setAttribute('src','LeePerrySmith.obj');\n        model.setAttribute('id','abc');\n\n        model.style.width=\"200px\";\n        model.style.height=\"200px\";\n        model.style.position=\"absolute\";\n        model.style.trasform=\"translateZ(-200px) rotateZ(40deg)\";*/\n\n    });\n  }\n};\n","// 1. Install dependencies DONE\n// 2. Import dependencies DONE\n// 3. Setup webcam and canvas DONE\n// 4. Define references to those DONE\n// 5. Load handpose DONE\n// 6. Detect function DONE\n// 7. Drawing utilities DONE\n// 8. Draw functions DONE\n\nimport React, { useRef } from \"react\";\n// import logo from './logo.svg';\nimport * as tf from \"@tensorflow/tfjs\";\nimport * as handpose from \"@tensorflow-models/handpose\";\nimport Webcam from \"react-webcam\";\nimport \"./App.css\";\nimport { drawHand } from \"./utilities\";\n\nfunction App() {\n  const webcamRef = useRef(null);\n  const canvasRef = useRef(null);\n\n  const runHandpose = async () => {\n    const net = await handpose.load();\n    console.log(\"Handpose model loaded.\");\n    //  Loop and detect hands\n    setInterval(() => {\n      detect(net);\n    }, 100);\n  };\n\n  const detect = async (net) => {\n    // Check data is available\n    if (\n      typeof webcamRef.current !== \"undefined\" &&\n      webcamRef.current !== null &&\n      webcamRef.current.video.readyState === 4\n    ) {\n      // Get Video Properties\n      const video = webcamRef.current.video;\n      const videoWidth = webcamRef.current.video.videoWidth;\n      const videoHeight = webcamRef.current.video.videoHeight;\n\n      // Set video width\n      webcamRef.current.video.width = videoWidth;\n      webcamRef.current.video.height = videoHeight;\n\n      // Set canvas height and width\n      canvasRef.current.width = videoWidth;\n      canvasRef.current.height = videoHeight;\n\n      // Make Detections\n      const hand = await net.estimateHands(video);\n      console.log(hand);\n\n      // Draw mesh\n      const ctx = canvasRef.current.getContext(\"2d\");\n      drawHand(hand, ctx);\n    }\n  };\n\n  runHandpose();\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <Webcam\n          ref={webcamRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n\n        <canvas\n          ref={canvasRef}\n          style={{\n            position: \"absolute\",\n            marginLeft: \"auto\",\n            marginRight: \"auto\",\n            left: 0,\n            right: 0,\n            textAlign: \"center\",\n            zindex: 9,\n            width: 640,\n            height: 480,\n          }}\n        />\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}